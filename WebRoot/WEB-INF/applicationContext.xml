<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">



	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">

		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>

		<property name="url">
			<value>jdbc:mysql://localhost:3306/ssh2</value>
		</property>

		<property name="username">
			<value>root</value>
		</property>

		<property name="password">
			<value>123456</value>
		</property>

	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">

		<property name="dataSource">
			<ref local="dataSource" />
		</property>

		<property name="mappingResources">
			<list>
				<value>com/test/bean/User.hbm.xml</value>
				<value>com/test/bean/Book.hbm.xml</value>
				<value>com/test/bean/Order.hbm.xml</value>
				<value>com/test/bean/Admin.hbm.xml</value>
			</list>
		</property>

		<property name="hibernateProperties">

			<props>

				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>

			</props>

		</property>

	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean id="userDao" class="com.test.dao.impl.UserDAOImpl"
		scope="singleton">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean> 
  <bean id="bookDao" class="com.test.dao.impl.BookDAOImpl"
		scope="singleton">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean> 
		<bean id="orderDao" class="com.test.dao.impl.OrderDAOImpl"
		scope="singleton">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean> 
	<bean id="adminDao" class="com.test.dao.impl.AdminDAOImpl"
		scope="singleton">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean> 
	<!--       USER      -->
	<bean id="userServiceTarget"
		class="com.test.service.impl.UserServiceImpl">
		<property name="userDao" ref="userDao"></property>
	</bean>
	<bean id="userService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="target" ref="userServiceTarget"></property>
		<property name="transactionManager" ref="transactionManager"></property>
		
		<property name="transactionAttributes">
		
			<props>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		
		</property>
				
	</bean>

	<bean id="saveUserAction"
		class="com.test.action.user.SaveUserAction" scope="prototype">
		<property name="service" ref="userService"></property>
	</bean>

	<bean id="listUserAction"
		class="com.test.action.user.ListUserAction" scope="prototype">
		<property name="service" ref="userService"></property>
	</bean>

	<bean id="removeUserAction"
		class="com.test.action.user.RemoveUserAction" scope="prototype">
		<property name="service" ref="userService"></property>
	</bean>
	
  <bean id="checkUserAction"
		class="com.test.action.user.CheckUserAction" scope="prototype">
		<property name="service" ref="userService"></property>
	</bean>
	
	<bean id="updatePUserAction"
		class="com.test.action.user.UpdatePUser">
		<property name="service" ref="userService"></property>
	</bean>

	<bean id="updateUserAction"
		class="com.test.action.user.UpdateUserAction" scope="prototype">
		<property name="service" ref="userService"></property>
	</bean>
	<!-- =============================== -->
	
	<!-- Book -->
	
	<bean id="bookServiceTarget"
		class="com.test.service.impl.BookServiceImpl">
		<property name="bookDao" ref="bookDao"></property>
	</bean>
 <bean id="bookService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		
		<property name="target" ref="bookServiceTarget"></property>
		<property name="transactionManager" ref="transactionManager"></property>
		
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	<bean id="saveBookAction"
		class="com.test.action.book.SaveBookAction" scope="prototype">
		<property name="bookservice" ref="bookService"></property>
	</bean>

	<bean id="listBookAction" class="com.test.action.book.ListBookAction" scope="prototype">
		<property name="bookservice" ref="bookService"></property>
	</bean>
    
    <bean id="listBookUserAction" class="com.test.action.book.ListBookUserAction" scope="prototype">
		<property name="bookservice" ref="bookService"></property>
	</bean>

	<bean id="removeBookAction" class="com.test.action.book.RemoveBookAction" scope="prototype">
		<property name="bookservice" ref="bookService"></property>
	</bean>
	
	
	<bean id="updatePBookAction" class="com.test.action.book.UpdatePBook" scope="prototype">
		<property name="bookservice" ref="bookService"></property>
	</bean>

	<bean id="updateBookAction" class="com.test.action.book.UpdateBookAction" scope="prototype">
		<property name="bookservice" ref="bookService"></property>
	</bean>
	
<!-- Order -->

<bean id="orderServiceTarget"
		class="com.test.service.impl.OrderServiceImpl">
		<property name="orderDao" ref="orderDao"></property>
	</bean>
 <bean id="orderService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		
		<property name="target" ref="orderServiceTarget"></property>
		<property name="transactionManager" ref="transactionManager"></property>
		
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="listOrderAction" class="com.test.action.order.ListOrderAction" scope="prototype">
		<property name="orderservice" ref="orderService"></property>
	</bean>
		<bean id="listOrderByIdAction" class="com.test.action.order.ListOrderByIdAction" scope="prototype">
		<property name="orderservice" ref="orderService"></property>
	</bean>
	<bean id="RemoveOrderAction" class="com.test.action.order.RemoveOrderAction" scope="prototype">
		<property name="orderservice" ref="orderService"></property>
	</bean>
	<bean id="SaveOrderAction" class="com.test.action.order.SaveOrderAction" scope="prototype">
		<property name="orderservice" ref="orderService"></property>
	</bean>

<!-- Admin -->
  
  
<bean id="adminServiceTarget"
		class="com.test.service.impl.AdminServiceImpl">
		<property name="adminDao" ref="adminDao"></property>
	</bean>
 <bean id="adminService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		
		<property name="target" ref="adminServiceTarget"></property>
		<property name="transactionManager" ref="transactionManager"></property>
		
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
 
 <bean id="CheckAdminAction" class="com.test.action.admin.CheckAdminAction" scope="prototype">
		<property name="adminservice" ref="adminService"></property>
	</bean>
  <bean id="SaveAdminAction" class="com.test.action.admin.SaveAdminAction" scope="prototype">
		<property name="adminservice" ref="adminService"></property>
	</bean>
	<bean id="UpdateAdminAction" class="com.test.action.admin.UpdateAdminAction" scope="prototype">
		<property name="adminservice" ref="adminService"></property>
	</bean>
	
	
	
</beans>